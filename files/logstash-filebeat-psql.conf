input {
  beats {
    port => 5044
    #ssl  => true
    #ssl_certificate => "/etc/ssl/logstash_cert.crt"
    #ssl_key => "/etc/ssl/logstash_key.key"
  }
}

filter {
  #if [type] == "syslog" {
  #  grok {
  #    match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
  #    add_field => [ "received_at", "%{@timestamp}" ]
  #    add_field => [ "received_from", "%{host}" ]
  #  }
  
  #syslog_pri { }
  #  date {
  #    match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
  #  }
  #}
  
  if [type] == "pg_syslog" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:pg_syslog_timestamp} CEST (?<pg_syslog_severity>[A-Z]{1,}):%{SPACE}%{GREEDYDATA:pg_syslog_message}" }
    }
    date {
      match => ["pg_syslog_timestamp", "yyyy-MM-dd HH:mm:ss"]
    }
  }
  
  if [type] == "pg_stat_activity" {
    date {
      match => ["query_start", "ISO8601"]
      #remove_field => ["event_time"]
    }
  }
  
  # Nginx access logs
  if [type] == "nginx_access" {
    mutate {
      convert => { "bytes_sent" => "float" }
      convert => { "body_bytes_sent" => "float" }
      convert => { "request_length" => "float" }
      convert => { "request_time" => "float" }
    }
    useragent {
      source => "http_user_agent"
    }
    geoip {
      add_tag => [ "GeoIP" ]
      source => "remote_addr"
    }
  }
  
  # iostat
  if [type]== "iostat" {
    grok {
      match => [ "message", "%{TIMESTAMP_ISO8601:timestamp}%{SPACE}(?<device>[a-z0-9]{3,4})%{SPACE}%{NUMBER:rrqm_s:float}%{SPACE}%{NUMBER:wrqm_s:float}%{SPACE}%{NUMBER:r_s:float}%{SPACE}%{NUMBER:w_s:float}%{SPACE}%{NUMBER:rMB_s:float}%{SPACE}%{NUMBER:wMB_s:float}%{SPACE}%{NUMBER:avgrq-sz:float}%{SPACE}%{NUMBER:avgqu-sz:float}%{SPACE}%{NUMBER:await:float}%{SPACE}%{NUMBER:r_await:float}%{SPACE}%{NUMBER:w_await:float}%{SPACE}%{NUMBER:svctm:float}%{SPACE}%{NUMBER:pct_util:float}" ]
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      timezone => "UTC"
    }
  }
}


output {
  #file {
  #  path => [ "/var/log/logstash/output.log" ]
  #}
  if "_grokparsefailure" not in [tags] {
    elasticsearch {
      hosts => "127.0.0.1"
      index => "logstash-filebeat-psql-%{+YYYY.MM.dd}"
    }
  } else { 
    file {
      path => "/var/log/logstash/grokparsefailure-%{+YYYY-MM-dd}"  
    }
  } 
}
