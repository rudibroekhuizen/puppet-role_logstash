input { 
  stdin {
  }
}

filter { 
  grok { 
    match => {
      "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
    add_tag => 'grokked' }  

# Tag all burp messages, drop others
  if [syslog_program] == "burp" { 
      mutate { 
        add_tag => "burp_logs" }
  }
  
  else { 
    drop { }
  }

# Process all burp messages. If syslog_message contains specific text, then grok it, else drop it
  if "burp_logs" in [tags] {
    if [syslog_message] =~ /^Running backup of / { 
      grok { 
        match => { 
          "syslog_message" => "Running backup of %{HOSTNAME:burp_client}" }
      add_tag   => 'start'
      add_field => [ 'backup_status', 'start' ] }
    } 

  else if [syslog_message] =~ /finishing/ { 
    grok {
      match=> { 
        "syslog_message" => "Logging to /mnt/backup/burpdata/%{HOSTNAME:burp_client}/finishing/log" }
      add_tag   => 'finish'
      add_field => [ 'backup_status', 'finish' ] }
  }
                            
  else {
    drop {}
  }
}

 date { 
   match => [ "syslog_timestamp",
    "MMM d HH:mm:ss",
    "MMM dd HH:mm:ss"]}
 }

output { 
  stdout {
    codec => rubydebug}
}
