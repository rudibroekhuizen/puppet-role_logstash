# Based on http://elijahpaul.co.uk/monitoring-pfsense-2-1-logs-using-elk-logstash-kibana-elasticsearch/
# Example input:
# Mar 20 12:33:54 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,12719,0,none,17,udp,143,10.80.0.170,10.80.3.255,17500,17500,123
# Mar 20 12:33:54 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,64,24883,0,none,17,udp,154,10.80.0.128,10.80.3.255,631,631,134
# Mar 20 12:33:55 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,12028,0,none,17,udp,142,10.80.1.85,255.255.255.255,17500,17500,122
# Mar 20 12:33:55 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,12029,0,none,17,udp,142,10.80.1.85,10.80.3.255,17500,17500,122
# Mar 20 12:33:55 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,9110,0,none,17,udp,132,10.80.0.115,255.255.255.255,17500,17500,112
# Mar 20 12:33:55 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,9111,0,none,17,udp,132,10.80.0.115,10.80.3.255,17500,17500,112
# Mar 20 12:33:55 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,3013,0,none,17,udp,271,10.80.1.41,255.255.255.255,17500,17500,251
# Mar 20 12:33:55 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,3014,0,none,17,udp,271,10.80.1.41,255.255.255.255,17500,17500,251
# Mar 20 12:33:55 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,3015,0,none,17,udp,271,10.80.1.41,10.80.3.255,17500,17500,251
# Mar 20 12:33:55 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,64,11606,0,none,17,udp,172,10.80.0.128,10.80.3.255,631,631,152
# Mar 20 12:33:55 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,22648,0,none,17,udp,229,10.80.0.185,10.80.3.255,138,138,209
# Mar 20 12:33:56 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,31826,0,none,17,udp,175,10.80.2.62,255.255.255.255,17500,17500,155
# Mar 20 12:33:56 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,31827,0,none,17,udp,175,10.80.2.62,10.80.3.255,17500,17500,155

input {
  file {
    path => [ "/srv/log/pfsense/messages" ]
    tags => [ "rsyslog", "PFSense" ]
  }
  stdin {
    tags => "PFSense"
  }
}

filter {
  if "PFSense" in [tags] {
    grok {
      add_tag => [ "firewall" ]
      match => [ "message", "(?<datetime>(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)\s+(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9]) (?:2[0123]|[01]?[0-9]):(?:[0-5][0-9]):(?:[0-5][0-9])) (?<prog>.*?): (?<msg>.*)" ]
    }
    mutate {
      gsub => ["datetime","  "," "]
    }
    date {
      match => [ "datetime", "MMM dd HH:mm:ss" ]
    }
    mutate {
      replace => [ "message", "%{msg}" ]
    }
    mutate {
      remove_field => [ "msg", "datetime" ]
    }
  }
  if [prog] =~ "filterlog" {
    mutate {
      remove_field => [ "msg", "datetime" ]
    }
    grok {
      patterns_dir => "./patterns"
      match => [ "message", "%{LOG_DATA}%{IP_SPECIFIC_DATA}%{IP_DATA}%{PROTOCOL_DATA}" ]
    }
    mutate {
      lowercase => [ 'proto' ]
    }
    geoip {
      add_tag => [ "GeoIP" ]
      source => "src_ip"
    }
  }
}

output { 
  elasticsearch {
    cluster => "cluster-pfsense"
  }
  stdout {
    codec => rubydebug
  }
}
