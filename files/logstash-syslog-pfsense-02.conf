# Based on http://elijahpaul.co.uk/monitoring-pfsense-2-1-logs-using-elk-logstash-kibana-elasticsearch/
# Pattern file for filterlog: https://gist.github.com/elijahpaul/f5f32d4e914dcb7fedd2
# Uses rsyslog as input: https://github.com/naturalis/puppet-role_rsyslog
# Example input (PFSense version 2.2.1):
# Mar 20 12:33:54: info pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,12719,0,none,17,udp,143,10.80.0.170,10.80.3.255,17500,17500,123
# Apr  1 14:53:03: err 172.16.1.1 php-fpm[247]: /rc.newwanip: rc.newwanip: Info: starting on em0.

input {
  file {
    path => [ "/srv/log/messages" ]
    tags => [ "syslog-pfsense" ]
    type => "syslog-pfsense"
  }
}

filter {
  if "syslog-pfsense" in [tags] {
    grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp}: %{WORD:syslog_severity} %{SYSLOGHOST:syslog_hostname} %{SYSLOGPROG:syslog_program}:%{SPACE} %{GREEDYDATA:syslog_message}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
    mutate {
      replace => [ "host", "%{syslog_hostname}" ]
    }
  
    if [syslog_program] =~ "filterlog" {
      grok {
        patterns_dir => "./patterns"
        match => [ "syslog_message", "%{LOG_DATA}%{IP_SPECIFIC_DATA}%{IP_DATA}%{PROTOCOL_DATA}" ]
      }
      mutate {
        lowercase => [ 'proto' ]
      }
      geoip {
        add_tag => [ "GeoIP" ]
        source => "src_ip"
      }
    }
  }
}

output { 
  elasticsearch {
    cluster => "cluster-pfsense"
    index   => "logstash-pfsense-01-%{+YYYY.MM.dd}"
  }
  stdout {
    codec => rubydebug
  }
}
