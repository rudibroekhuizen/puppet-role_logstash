# Based on http://elijahpaul.co.uk/monitoring-pfsense-2-1-logs-using-elk-logstash-kibana-elasticsearch/
# Example input (PFSense version 2.2.1):
# Mar 20 12:33:54 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,12719,0,none,17,udp,143,10.80.0.170,10.80.3.255,17500,17500,123
# Mar 20 12:33:54 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,64,24883,0,none,17,udp,154,10.80.0.128,10.80.3.255,631,631,134
# Mar 20 12:33:55 pfsense.localdomain filterlog: 59,16777216,,1000001581,em0,match,block,in,4,0x0,,128,12028,0,none,17,udp,142,10.80.1.85,255.255.255.255,17500,17500,122

input {
  tcp {
    port => 514
    type => "PFSense"
    tags => "PFSense"
  }
  udp {
    port => 514
    type => "PFSense"
    tags => "PFSense"
  }
  stdin {
    tags => "PFSense"
  }
}

filter {
  if "PFSense" in [tags] {
    grok {
      add_tag => [ "firewall" ]
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp}: %{WORD:syslog_severity} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}:%{SPACE} %{GREEDYDATA:syslog_message}" ]
    }
    mutate {
      gsub => ["datetime","  "," "]
    }
    date {
      match => [ "datetime", "MMM dd HH:mm:ss" ]
    }
    mutate {
      replace => [ "message", "%{msg}" ]
    }
    mutate {
      remove_field => [ "msg", "datetime" ]
    }
  }
  if [prog] =~ "filterlog" {
    mutate {
      remove_field => [ "msg", "datetime" ]
    }
    grok {
      patterns_dir => "./patterns"
      match => [ "message", "%{LOG_DATA}%{IP_SPECIFIC_DATA}%{IP_DATA}%{PROTOCOL_DATA}" ]
    }
    mutate {
      lowercase => [ 'proto' ]
    }
    geoip {
      add_tag => [ "GeoIP" ]
      source => "src_ip"
    }
  }
}

output { 
  elasticsearch {
    cluster => "cluster-pfsense"
    index   => "logstash-pfsense-01-%{+YYYY.MM.dd}"
  }
  stdout {
    codec => rubydebug
  }
}
